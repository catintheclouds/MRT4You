@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model StationOnLine
@{
    List<Transaction> tList = (List<Transaction>) ViewBag.transactions;
    var forwardError = ViewBag.timingErrorForward;
    var oppError = ViewBag.timingErrorOpp;
    }
<html>
<head>
    <script>
        function statusselect0to6(option_value) {
        document.getElementById("inputnextstationtime").style.display = "inline";
        document.getElementById("inputoppstationtime").style.display = "inline";
        document.getElementById("breakdownNext").style.display = "none";
        document.getElementById("breakdownOpp").style.display = "none";
        document.getElementById("endStationNext").style.display = "none";
        document.getElementById("endStationOpp").style.display = "none";
            if (option_value == 0 || option_value == 1) {
            document.getElementById("inputnextstationtime").readOnly = true;
            document.getElementById("inputoppstationtime").readOnly = true;
            if (option_value == 0) {
                document.getElementById("inputnextstationtime").value = @Model.timeToNextStation.ToString();
                document.getElementById("inputoppstationtime").value = @Model.timeToNextStationOpp.ToString();
            }
            if (option_value == 1) {
                document.getElementById("inputnextstationtime").value = (9999);
                document.getElementById("inputnextstationtime").style.display = "none";
                if (@Model.timeToNextStation != 0) {
                    document.getElementById("breakdownNext").style.display = "inline";
                }
                document.getElementById("inputoppstationtime").value = (9999);
                document.getElementById("inputoppstationtime").style.display = "none";
                if (@Model.timeToNextStationOpp != 0) {
                    document.getElementById("breakdownOpp").style.display = "inline";
                }
            }
        }
        else {
            document.getElementById("inputnextstationtime").readOnly = false;
            document.getElementById("inputoppstationtime").readOnly = false;
            if (option_value == 4) {
                document.getElementById("inputnextstationtime").value = @Model.editedTimeToNextStation.ToString();
                document.getElementById("inputoppstationtime").value = @Model.editedTimeToNextStationOpp.ToString();
            }
            if (option_value == 2) {
                document.getElementById("inputnextstationtime").readOnly = true;
                document.getElementById("inputnextstationtime").value = (9999);
                document.getElementById("inputnextstationtime").style.display = "none";
                if (@Model.timeToNextStation != 0) {
                    document.getElementById("breakdownNext").style.display = "inline";
                }
                document.getElementById("inputoppstationtime").value = @Model.timeToNextStationOpp.ToString();
            }
            if (option_value == 3) {
                document.getElementById("inputoppstationtime").readOnly = true;
                document.getElementById("inputoppstationtime").value = (9999);
                document.getElementById("inputoppstationtime").style.display = "none";
                if (@Model.timeToNextStationOpp != 0) {
                    document.getElementById("breakdownOpp").style.display = "inline";
                }
                document.getElementById("inputnextstationtime").value = @Model.timeToNextStation.ToString();
            }
            if (option_value == 5) {
                document.getElementById("inputnextstationtime").value = @Model.editedTimeToNextStation.ToString();
                document.getElementById("inputoppstationtime").readOnly = true;
                document.getElementById("inputoppstationtime").value = @Model.timeToNextStationOpp.ToString();
            }
            if (option_value == 6) {
                document.getElementById("inputoppstationtime").value = @Model.editedTimeToNextStationOpp.ToString();
                document.getElementById("inputnextstationtime").readOnly = true;
                document.getElementById("inputnextstationtime").value = @Model.timeToNextStation.ToString();
            }
        }
        if (@Model.timeToNextStation == 0) {
            document.getElementById("inputnextstationtime").style.display = "none";
            document.getElementById("endStationNext").style.display = "inline";
        }
        if (@Model.timeToNextStationOpp == 0) {
            document.getElementById("inputoppstationtime").style.display = "none";
            document.getElementById("endStationOpp").style.display = "inline";
        }

    }
    </script>
</head>

<body onload="statusselect0to6(document.getElementById('selectStatus123').value)">
    <h3>Edit page</h3>
    <div class="row">
        <div class="col-md-8">
            <form method="post" asp-controller="Home" asp-action="Edit">
                <table class="table">
                    <tr>
                          <td>Station Code</td>
                        <td><input style="border:none" type="text" name="stationCode" value=@Model.stationCode.ToString() readonly /></td>
                    </tr>
                    <tr>
                        <td>Station Name</td>
                        <td>@Model.Station.stationName</td>
                    </tr>
                    <tr>
                        <td>Status</td>
                        <td>
                            @*<input class="form-control" type="text" name="status" value=@Model.status.ToString() />*@
                            <select id="selectStatus123" onchange="statusselect0to6(this.value)" class="form-control" asp-for="status">
                                <option value="0" selected>Operational</option>
                                @if (Model.timeToNextStation != 0 && Model.timeToNextStationOpp != 0)
                                {
                                    <option value="1">Bi-directional Breakdown</option>
                                    <option value="4">Bi-directional Delay</option>
                                }
                                @if (Model.timeToNextStation != 0)
                                {
                                    <option value="2">Forward Breakdown</option>
                                    <option value="5">Forward Delay</option>
                                }
                                @if (Model.timeToNextStationOpp != 0)
                                { 
                                    <option value="3">Opposite Breakdown</option>
                                    <option value="6">Opposite Delay</option>
                                }
                            </select>
                        </td>
                    </tr>
                    <tr id="nextstationtime">
                        <td>Time To Next Station</td>
                        <td>
                            <input id="inputnextstationtime" class="form-control" type="number" min="0" max="9999" name="editedTimeToNextStation" value=@Model.timeToNextStation.ToString() />
                            <input id="breakdownNext" class="form-control" type="text" name="" value="Breakdown" readonly />
                            <input id="endStationNext" class="form-control" type="text" name="" value="End Station" readonly />
                            <span asp-validation-for="editedTimeToNextStation" class="text-danger"></span>
                            <span class="text-danger">@forwardError</span>
                        </td>
                    </tr>
                    <tr id="oppstationtime">
                        <td>Time To Opposite Station</td>
                        <td>
                            <input id="inputoppstationtime" class="form-control" type="number" min="0" max="9999" name="editedTimeToNextStationOpp" value=@Model.timeToNextStationOpp.ToString() />
                            <input id="breakdownOpp" class="form-control" type="text" name="" value="Breakdown" readonly />
                            <input id="endStationOpp" class="form-control" type="text" name="" value="End Station" readonly />
                            <span asp-validation-for="editedTimeToNextStationOpp" class="text-danger"></span>
                            <span class="text-danger">@oppError</span>
                        </td>
                    </tr>
                </table>
                <input type="hidden" name="timeToNextStation" value="@Model.timeToNextStation" />
                <input type="hidden" name="timeToNextStationOpp" value="@Model.timeToNextStationOpp" />
                <input type="hidden" name="Id" value="@Model.Id" />
                <input type="hidden" name="StationId" value="@Model.StationId" />
                <input type="hidden" name="LineId" value="@Model.LineId" />
                <input type="submit" value="Save" class="btn btn-primary" />
                <input type="button" class="btn btn-secondary" value="Cancel" onclick="location.href='@Url.Action("Cancel", "Home", new { lineID = Model.LineId})'">
            </form>
        </div>
        <div class="col-md-4 border">
            <h5 class="border-bottom">Transaction History</h5>
            <div style="overflow:auto; height:250px;">
                @foreach(var x in tList)
                {
                    <p>Status update to @x.newStatusOfStation by @x.User.username at @x.transactionTime</p>
                }
            </div>
        </div>
    </div>
</body>
</html>